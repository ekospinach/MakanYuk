package com.kitsune.thirdlib;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

import android.app.Activity;
import android.content.Context;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.os.Environment;
import android.util.DisplayMetrics;
import android.util.Log;
import android.widget.Toast;

public class KTools 
{
	
	public String KTOOLS = "KTools";
	public String mLogFileName = "log.txt";
	public String mDir = "/kitsune/";

	private Activity mAct;
	
	public KTools(Activity act)
	{
		this.mAct = act;
	} 
	
	public DisplayMetrics getDisplayMetrics()
	{
		DisplayMetrics metrics = mAct.getResources().getDisplayMetrics();
		return metrics;
	}
	
	/**
	 * check wheter device connected to the network
	 * @param activity activity of the class 
	 * @return state of device connection 
	 */
	public boolean isOnline() 
	{
	    ConnectivityManager cm = (ConnectivityManager) mAct.getSystemService(Context.CONNECTIVITY_SERVICE);
	    NetworkInfo netInfo = cm.getActiveNetworkInfo();
	    if (netInfo != null && netInfo.isConnectedOrConnecting()) 
	    {
	        return true;
	    }
	    return false;
	}
	
    public void writeToLog(String sBody){
    	final String state = Environment.getExternalStorageState();
    	if (Environment.MEDIA_MOUNTED.equals(state)) {
			try
			{
				File root = new File(Environment.getExternalStorageDirectory()+mDir+mLogFileName);
			    if (!root.exists())
			    {
			       try
			       {
			    	   root.createNewFile();
			       } 
			       catch (IOException e)
			       {
			     	  Log.d(KTOOLS, e.getMessage().toString());
			       }
			    }
				
				FileWriter writer = new FileWriter(root);
				BufferedWriter buf = new BufferedWriter(writer); 
			    buf.append(sBody);
			    buf.newLine();
			    buf.close();
				Toast.makeText(mAct, "Saved", Toast.LENGTH_SHORT).show();
			}
			catch(IOException e)
			{
				Log.e(KTOOLS, e.getMessage().toString());
			}
    	}else{
    		Log.i(KTOOLS, "No External Directory");
    	}
	} 
    
    public String getFromLog(){
    	final String state = Environment.getExternalStorageState();
    	if (Environment.MEDIA_MOUNTED.equals(state)) {
    		File root = new File(Environment.getExternalStorageDirectory()+mDir+mLogFileName);
		    if (!root.exists())
		    {
		    	return null;
		    }else{
		    	String result = null;
		    	StringBuilder text = new StringBuilder();
				try {
					FileReader fReader = new FileReader(root);
					BufferedReader reader = new BufferedReader(fReader);
					while ((result = reader.readLine()) != null) {
				        text.append(result);
				    }
					reader.close();
				} 
				catch (IOException e) {
					Log.e(KTOOLS, e.getMessage().toString());
				}
				result = text.toString();
				return result;
		    }
    	}else{
    		return null;
    	}
    }
    
    public static float distanceFrom(float lat1, float lng1, float lat2, float lng2) 
	{
	    double earthRadius = 3958.75;
	    double dLat = Math.toRadians(lat2-lat1);
	    double dLng = Math.toRadians(lng2-lng1);
	    double a = Math.sin(dLat/2) * Math.sin(dLat/2) +
	               Math.cos(Math.toRadians(lat1)) * Math.cos(Math.toRadians(lat2)) *
	               Math.sin(dLng/2) * Math.sin(dLng/2);
	    double c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
	    double dist = earthRadius * c;
	
	    int meterConversion = 1609;
	
	    return (float) dist * meterConversion;
	}

}
